package ${bussiPackage}.${entityPackage}.service.impl;

import ${bussiPackage}.${entityPackage}.entity.${entityName};
import ${bussiPackage}.${entityPackage}.mapper.${entityName}Mapper;
import ${bussiPackage}.${entityPackage}.service.I${entityName}Service;
import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;

/**
 * @Description: ${tableVo.ftlDescription}
 * @author： jeecg-boot
 * @date：   ${.now?string["yyyy-MM-dd"]}
 * @version： V1.0
 */
@Service
public class ${entityName}ServiceImpl extends ServiceImpl<${entityName}Mapper, ${entityName}> implements I${entityName}Service {
<#if isSubTable == "true">
	@Autowired
	private JeecgOrderTicketMapper jeecgOrderTicketMapper;
	
	@Override
	public List<JeecgOrderTicket> selectTicketsByMainId(String mainId) {
		return jeecgOrderTicketMapper.selectTicketsByMainId(mainId);
	}
</#if>
<#if isMainTable == "true">
	@Autowired
	private JeecgOrderMainMapper jeecgOrderMainMapper;
	@Autowired
	private JeecgOrderCustomerMapper jeecgOrderCustomerMapper;
	@Autowired
	private JeecgOrderTicketMapper jeecgOrderTicketMapper;
	
	@Override
	@Transactional
	public void saveMain(JeecgOrderMain jeecgOrderMain, List<JeecgOrderCustomer> jeecgOrderCustomerList, List<JeecgOrderTicket> jeecgOrderTicketList) {
		jeecgOrderMainMapper.insert(jeecgOrderMain);
		for(JeecgOrderCustomer entity:jeecgOrderCustomerList) {
			entity.setOrderId(jeecgOrderMain.getId());
			jeecgOrderCustomerMapper.insert(entity);
		}
		for(JeecgOrderTicket entity:jeecgOrderTicketList) {
			entity.setOrderId(jeecgOrderMain.getId());
			jeecgOrderTicketMapper.insert(entity);
		}
	}

	@Override
	@Transactional
	public void updateMain(JeecgOrderMain jeecgOrderMain, List<JeecgOrderCustomer> jeecgOrderCustomerList, List<JeecgOrderTicket> jeecgOrderTicketList) {
		jeecgOrderMainMapper.updateById(jeecgOrderMain);
		
		//1.先删除子表数据
		jeecgOrderTicketMapper.deleteTicketsByMainId(jeecgOrderMain.getId());
		jeecgOrderCustomerMapper.deleteCustomersByMainId(jeecgOrderMain.getId());
		
		//2.子表数据重新插入
		for(JeecgOrderCustomer entity:jeecgOrderCustomerList) {
			entity.setOrderId(jeecgOrderMain.getId());
			jeecgOrderCustomerMapper.insert(entity);
		}
		for(JeecgOrderTicket entity:jeecgOrderTicketList) {
			entity.setOrderId(jeecgOrderMain.getId());
			jeecgOrderTicketMapper.insert(entity);
		}
	}

	@Override
	@Transactional
	public void delMain(String id) {
		jeecgOrderMainMapper.deleteById(id);
		jeecgOrderTicketMapper.deleteTicketsByMainId(id);
		jeecgOrderCustomerMapper.deleteCustomersByMainId(id);
	}

	@Override
	@Transactional
	public void delBatchMain(Collection<? extends Serializable> idList) {
		for(Serializable id:idList) {
			jeecgOrderMainMapper.deleteById(id);
			jeecgOrderTicketMapper.deleteTicketsByMainId(id.toString());
			jeecgOrderCustomerMapper.deleteCustomersByMainId(id.toString());
		}
	}
</#if>
}
